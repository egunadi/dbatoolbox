Date: Thu, 25 May 2023 21:19:28 +0000 (UTC)
Message-ID: <361813184.29.1685049568686@a6d9552c0a20>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_28_1189676038.1685049568686"

------=_Part_28_1189676038.1685049568686
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>DBA Services</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: var(--ds-surface, #fff) !important;
        color: var(--ds-text, #000) !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: var(--ds-text, #000);
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>DBA Services</h1>
    <div class=3D"Section1">
        <h2 id=3D"DBAServices-1.PerformanceTuningOverview">1. Performance T=
uning Overview</h2>
<div id=3D"expander-1241948821" class=3D"expand-container">
<div id=3D"expander-control-1241948821" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">Click her=
e to expand...</span>
</div>
<div id=3D"expander-content-1241948821" class=3D"expand-content">
<h3 id=3D"DBAServices-A.MostCommonPerformanceIssues(64%ofallperformanceprob=
lems)">A. Most Common Performance Issues (64% of all performance problems)<=
/h3>
<ol start=3D"1">
<li><p>Insufficient or poor indexes</p>
<ol start=3D"1">
<li><p>Table scans impact disk performance and memory use, as well as lead =
to blocking</p></li>
<li><p>It=E2=80=99s possibly to have too many indexes, which lead to perfor=
mance hits on data modification queries (INSERT, DELETE, or UPDATE operatio=
n)</p></li>
</ol></li>
<li><p>Inaccurate or missing statistics</p>
<ol start=3D"1">
<li><p>The query optimizer makes choices based on row estimates that come f=
rom these statistics</p></li>
</ol></li>
<li><p>Bad T-SQL</p>
<ol start=3D"1">
<li><p>Moving too much data, writing overcomplicated code, using wrong obje=
ct types, etc.</p></li>
</ol></li>
<li><p>Problematic execution plans</p>
<ol start=3D"1">
<li><p>Most of times, these are fixed through code changes, statistics upda=
tes, or new indexes</p></li>
<li><p>Other times, this occurs due to parameter sniffing gone wrong</p></l=
i>
</ol></li>
<li><p>Excessive blocking</p>
<ol start=3D"1">
<li><p>A lack of resources, not enough memory, CPU, or fast enough disks ca=
n lead to additional blocking</p></li>
</ol></li>
<li><p>Deadlocks</p>
<ol start=3D"1">
<li><p>Caused by blocking, but is something separate</p></li>
<li><p>If all your queries complete fast enough, the chances of a deadlock =
are very slim</p></li>
</ol></li>
<li><p>Non-set-based operations</p>
<ol start=3D"1">
<li><p>Caused by cursors and other types of loop operations to force a row-=
by-row style processing</p></li>
</ol></li>
<li><p>Incorrect database design</p>
<ol start=3D"1">
<li><p>Ensuring that your database is properly normalized and data is store=
d properly (ex. dates go into a datetime column)</p></li>
</ol></li>
<li><p>Poor execution plan reuse</p>
<ol start=3D"1">
<li><p>Caused by things like dynamic T-SQL or inappropriate parameters, pre=
venting plan reuse or parameterization</p></li>
</ol></li>
<li><p>Frequent recompilation of queries</p>
<ol start=3D"1">
<li><p>While recompilation is generally desirable, there can be too much du=
e to volatile data or poor code</p></li>
</ol></li>
</ol>
<h3 id=3D"DBAServices-B.Overviewof(Recursive)QueryPerformanceTuningProcess"=
>B. Overview of (Recursive) Query Performance Tuning Process</h3>
<ol start=3D"1">
<li><p>Set performance target for application </p></li>
<li><p>Analyze application performance</p>
<ol start=3D"1">
<li><p>Ensure servers are not overwhelmed</p>
<ol start=3D"1">
<li><p>Process of capturing performance metrics varies depending on if the =
server is on VMware, Hyper-V, Docker, AWS, Azure, etc.</p></li>
<li><p>In general, focus on collecting metrics on waits and queues, especia=
lly around disk I/O, memory, and CPU</p></li>
<li><p>Network (health of the routers, cables, Wi-Fi repeaters, etc.) can a=
lso affect performance</p></li>
</ol></li>
</ol></li>
<li><p>Identify resource bottlenecks</p></li>
<li><p>Ensure proper configuration for hardware, OS, platform, SQL Server, =
database, and applications</p></li>
<li><p>Identify costliest query associated with bottleneck</p></li>
<li><p>Optimize query</p></li>
</ol>
<h3 id=3D"DBAServices-C.Identifyingresourcebottlenecks">C. Identifying reso=
urce bottlenecks</h3>
<p>This is a repetitive process that goes as follows:</p>
<ol start=3D"1">
<li><p>Identify the bottleneck</p></li>
<li><p>Fix it</p></li>
<li><p>Validate the fix</p></li>
<li><p>Measure the impact and current performance</p></li>
<li><p>Start again with the next bottleneck</p></li>
</ol>
<p>This process should be done for one bottleneck at a time, making one cha=
nge at a time and validating that one change at a time.</p>
<h3 id=3D"DBAServices-D.In-depthQueryTuningProcessOverview">D. In-depth Que=
ry Tuning Process Overview</h3>
<ol start=3D"1">
<li><p>Baseline performance and resource use of costliest query</p></li>
<li><p>Set performance target for query (ex. every query has to meet a thre=
e-second minimum operation, with a few exceptions)</p></li>
<li><p>Analyze and optimize factors (such as statistics) that influence que=
ry execution</p></li>
<li><p>Analyze query for common problems</p></li>
<li><p>Analyze query execution plan</p></li>
<li><p>Analyze and prioritize operators to identify bottlenecks</p></li>
<li><p>If warranted, modify query and/or index. Afterwards:</p>
<ol start=3D"1">
<li><p>Measure performance and resource use again</p></li>
<li><p>Determine if query performance improved</p>
<ol start=3D"1">
<li><p>If not, undo changes!</p></li>
</ol></li>
</ol></li>
<li><p>Determine if query performance is acceptable</p>
<ol start=3D"1">
<li><p>If not, return to step 4</p></li>
</ol></li>
</ol>
</div>
</div>
<h2 id=3D"DBAServices-2.CreatingaBaseline">2. Creating a Baseline</h2>
<div id=3D"expander-1451905329" class=3D"expand-container">
<div id=3D"expander-control-1451905329" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">A. Notes =
on the Performance Monitor Tool</span>
</div>
<div id=3D"expander-content-1451905329" class=3D"expand-content">
<h3 id=3D"DBAServices-A.NotesonthePerformanceMonitorTool">A. Notes on the P=
erformance Monitor Tool </h3>
<ol start=3D"1">
<li><p> On a VM, counter measurements is usually is for the VM, not the phy=
sical server. That means some values are not going to accurately reflect ph=
ysical reality.</p></li>
<li><p>While real time graphs are available, it=E2=80=99s recommended to ca=
ptured data into a file (called a <em>data collector set</em>) for offline =
analysis.</p></li>
</ol>
</div>
</div>
<div id=3D"expander-798323725" class=3D"expand-container">
<div id=3D"expander-control-798323725" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">B. Memory=
 Performance Analysis</span>
</div>
<div id=3D"expander-content-798323725" class=3D"expand-content">
<h3 id=3D"DBAServices-B.MemoryPerformanceAnalysis">B. Memory Performance An=
alysis</h3>
<p>Memory bottlenecks are a priority because they also affect CPU. More CPU=
 cycles are needed to write memory pages to disk so SQL Server can maintain=
 enough free internal memory (via a process called <em>lazy writer</em>). <=
/p>
<h4 id=3D"DBAServices-I.MemorySettings">I. Memory Settings</h4>
<p>The following script can be used to determine the <em>max server memory<=
/em> setting for SQL Server:</p>
<p><a href=3D"https://github.com/bornsql/scripts/blob/main/max_server_memor=
y.sql" data-card-appearance=3D"inline" class=3D"external-link" rel=3D"nofol=
low">https://github.com/bornsql/scripts/blob/main/max_server_memory.sql</a>=
 </p>
<p><strong>At least 2GB should be available for the OS and another 2GB if M=
edInformatix is hosted on the same server.</strong></p>
<p><strong>Microsoft recommends that </strong><em><strong>min server memory=
 </strong></em><strong>is 0.</strong></p>
<h4 id=3D"DBAServices-II.MemoryPerfmonCounters">II. Memory Perfmon Counters=
</h4>
<ol start=3D"1">
<li><p>Memory - Available MBytes</p>
<ol start=3D"1">
<li><p>Extended periods of time with this value very low and SQL Server mem=
ory not changing indicates that the server is under severe memory stress.</=
p>
<ol start=3D"1">
<li><p><strong>Low memory is defined as less than 1GB by Brent Ozar and 10%=
 of the installed memory by PAL</strong></p></li>
</ol></li>
<li><p>Can also look at Available Bytes/Kbytes for more granularity</p></li=
>
</ol></li>
<li><p>Memory - Pages/Sec and Memory - Page Faults/Sec</p>
<ol start=3D"1">
<li><p>Pages/Sec measures the rate of hard page faults (where data must be =
retrieved from disk), whereas Page Faults/Sec measures the rate of total pa=
ge faults, including soft faults (where the data can be retrieved from memo=
ry).</p></li>
<li><p><strong>A baseline is essential to determine the expected normal beh=
avior, which can range from 0 to 1,000 per second for Page Faults/Sec.</str=
ong></p>
<ol start=3D"1">
<li><p>These numbers vary widely based on the amount and type of memory as =
well as the speed of disk access on the system</p></li>
</ol></li>
<li><p>Per Scott Whigham, some page faults are normal; look for consistentl=
y high numbers </p></li>
<li><p>For more granularity, Pages/sec can be broken up into </p>
<ol start=3D"1">
<li><p>Pages Input/sec for page reads. This is what causes wait times in ap=
plication.</p></li>
<li><p>Pages Output/sec for page writes. This can be ignored unless disk lo=
ad is an issue.</p></li>
</ol></li>
<li><p>Process:Page Faults/sec can also be used to see specifically which p=
rocess is causing excessive paging</p></li>
</ol></li>
<li><p>Paging File - %Usage</p>
<ol start=3D"1">
<li><p>Paging is used by virtual memory to allows users to execute programs=
 larger than the actual physical memory. </p></li>
<li><p><strong>Ideally we shouldn't have to use the Paging File. Brent Ozar=
 recommends a 0 or 1% usage at most, while PAL is fine with up to 70%.</str=
ong></p></li>
<li><p>Note that paging may be caused by problems external to SQL Server</p=
></li>
<li><p>Paging File - %Usage Peak can also be used to see peak values</p></l=
i>
</ol></li>
<li><p>SQLServer:Buffer Manager - Buffer Cache Hit Ratio</p>
<ol start=3D"1">
<li><p><strong>Per Brent Ozar, it used to be recommended to keep this above=
 90%, which means the majority of reads are coming out of the buffer cache<=
/strong></p>
<ol start=3D"1">
<li><p>This may not be true anymore depending on how reads are done in the =
system (ex. for a reporting workloads with lots of ad hoc queries)</p></li>
<li><p>A baseline value is needed to determine what=E2=80=99s normal</p></l=
i>
</ol></li>
</ol></li>
<li><p>SQLServer:Buffer Manager - Page Life Expectancy</p>
<ol start=3D"1">
<li><p>This indicates how long a page will stay in the buffer pool without =
being referenced</p></li>
<li><p><strong>Brent Ozar recommends at least 180 seconds, while SQLwatch.i=
o recommends &gt; 300 seconds</strong></p></li>
<li><p>A baseline needs to be established and monitored over time</p>
<ol start=3D"1">
<li><p>Reporting systems, as opposed to OLTP systems, are expected to have =
a lower value</p></li>
<li><p> This number is also expected to dip to very low levels during night=
ly loads</p></li>
</ol></li>
</ol></li>
<li><p>SQLServer:Buffer Manager - Checkpoint Pages/Sec</p>
<ol start=3D"1">
<li><p>This represents the number of pages moved to disk by a checkpoint op=
eration</p></li>
<li><p><strong>Should be relatively low: less than 30 per second for most s=
ystems</strong></p></li>
<li><p>Higher values indicate a large number of writes occurring within the=
 system, possibly indicative of I/O problems</p></li>
</ol></li>
<li><p>SQLServer:Buffer Manager - Lazy Writes/Sec</p>
<ol start=3D"1">
<li><p>This records how much dirty, aged buffers are removed from the buffe=
r by the lazy write process, a system process that frees up the memory for =
other uses</p></li>
<li><p><strong>Should consistently be less than 20 for the average system</=
strong></p></li>
<li><p>Higher values possibly indicate I/O issues or even memory problems</=
p></li>
</ol></li>
<li><p>SQLServer:Memory Manager - Memory Grants Pending</p>
<ol start=3D"1">
<li><p>Under normal conditions, this should be consistently 0 for most prod=
uction servers</p></li>
<li><p>To retrieve this value on the fly, run queries against the DMV <code=
>sys.dm_exec_query_memory_grants</code> . A <code>null</code> value in the =
column <code>grant_time</code> indicates that the process is still waiting =
for a memory grant.</p></li>
</ol></li>
<li><p>SQLServer:Memory Manager - Target Server Memory (KB) and SQLServer:M=
emory Manager - Total Server Memory (KB)</p>
<ol start=3D"1">
<li><p>Target Server Memory (KB) indicates the total amount of dynamic memo=
ry SQL Server is willing to consume, while Total Server Memory (KB) indicat=
es the amount of memory currently assigned to SQL Server</p></li>
<li><p><strong>Target Server Memory (KB) should be close to the size of phy=
sical memory available, especially if the system is dedicated to SQL Server=
</strong></p></li>
<li><p><strong>Total Server Memory (KB) should be close to Target Server Me=
mory (KB).</strong> If it=E2=80=99s much less, make sure (1) max server mem=
ory is configured properly and (2) the system did not just start up (since =
there is a <em>warm-up phase </em>to expand memory allocation and bring dat=
a pages into memory). Ruling those two out, we can conclude SQL Server simp=
ly has a low memory requirement.</p></li>
<li><p><strong>Systems with a low memory requirement usually have 5,000 fre=
e pages or more.</strong> The status of memory allocation can also be queri=
ed via the DMV <code>sys.dm_os_ring_buffers</code> .</p></li>
</ol></li>
<li><p>Process:Private Bytes and SQL Server:Buffer Manager - Total pages</p=
>
<ol start=3D"1">
<li><p>Most memory used by SQL Server goes into the buffer pool. However, t=
here are allocations beyond the buffer pool known as <em>private bytes</em>=
 that can cause memory pressure</p></li>
<li><p>If you suspect this issue, compare Process:Private Bytes with SQL Se=
rver:Buffer Manager - Total pages</p></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-III.AdditionalMemoryMonitoringTools">III. Additional =
Memory Monitoring Tools</h4>
<ol start=3D"1">
<li><p>DBCC MEMORYSTATUS</p>
<ol start=3D"1">
<li><p>Returns two result sets, one showing allocations of memory and count=
s of occurrences, another showing different memory managers and the amount =
of memory they have consumed at the moment.</p></li>
<li><p>If Memory Manager =E2=80=9CTarget Committed=E2=80=9D (the system req=
uired memory) is higher than =E2=80=9CCurrent Committed=E2=80=9D (the memor=
y currently provided), there may be buffer cache problems.</p>
<ol start=3D"1">
<li><p>Figure out which process is currently using the most memory using <c=
ode>sys.dm_os_performance_counters</code></p></li>
</ol></li>
</ol></li>
<li><p>Dynamic Management Views</p>
<ol start=3D"1">
<li><p>Sys.dm_os_memory_brokers</p>
<ol start=3D"1">
<li><p>While most memory is allocated to the buffer cache, this DMV exposes=
 other processes that also consume memory</p></li>
</ol></li>
<li><p>Sys.dm_os_memory_clerks</p>
<ol start=3D"1">
<li><p>If perfmon counter Process:Private Bytes is high, use this to determ=
ine how memory is being allocated</p></li>
<li><p>For in-memory OLTP storage, use <code>sys.dm_db_xtp_table_memory_sta=
ts</code> instead</p></li>
</ol></li>
<li><p>Sys.dm_os_ring_buffers</p>
<ol start=3D"1">
<li><p>Not documented in Books Online, so it=E2=80=99s subject to change or=
 removal</p></li>
<li><p>Outputs as XML, so XQuery may be needed to digest</p></li>
<li><p>A ring buffer is simply a recorded response to a notification. We ca=
n use it to see changes in memory usage</p></li>
<li><p>Main ring buffers associated with memory:</p>
<ol start=3D"1">
<li><p>RING_BUFFER_RESOURCE_MONITOR</p>
<ol start=3D"1">
<li><p>Records changes in memory allocation</p></li>
<li><p>Useful for identifying external memory pressure</p></li>
</ol></li>
<li><p>RING_BUFFER_OOM (out of memory)</p>
<ol start=3D"1">
<li><p>Records out-of-memory issues</p></li>
<li><p>Can see what kind of memory action failed</p></li>
</ol></li>
<li><p>RING_BUFFER_MEMORY_BROKER</p>
<ol start=3D"1">
<li><p>Identifies internal memory pressure, which forces processes to relea=
se memory for the buffer</p></li>
</ol></li>
<li><p>RING_BUFFER_BUFFER_POOL</p>
<ol start=3D"1">
<li><p>Records when the buffer pool itself is running out of memory</p>
<ol start=3D"1">
<li><p>This is a general indication of memory pressure</p></li>
</ol></li>
</ol></li>
</ol></li>
</ol></li>
<li><p>Sys.dm_db_xtp_table_memory_stats</p>
<ol start=3D"1">
<li><p>Shows memory used by tables and indexes created in-memory</p></li>
<li><p>Will need to query <code>sys.objects</code> to get the actual names =
of tables or indexes</p></li>
</ol></li>
<li><p>Sys.dm_xtp_system_memory_consumers</p>
<ol start=3D"1">
<li><p>Shows system structures used to manage the internals of the memory e=
ngine (as opposed to the amount of data loaded into memory)</p></li>
<li><p>Look for the allocated and used bytes shown for each of the manageme=
nt structures</p></li>
</ol></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-IV.MemoryBottleneckResolutions">IV. Memory Bottleneck=
 Resolutions</h4>
<ol start=3D"1">
<li><p>When there is high memory stress, indicated by a large number of har=
d page faults, this general flowchart can be used to resolve it:</p>
<ol start=3D"1">
<li><p>Check if Memory:Available Mbytes is low</p>
<ol start=3D"1">
<li><p>If yes, it=E2=80=99s possible there are external memory problems. Tr=
oubleshoot in operating system.</p></li>
</ol></li>
<li><p>In <code>DBCC MEMORYSTATUS</code>, check if COMMITTED is above TARGE=
T</p>
<ol start=3D"1">
<li><p>If yes, there is internal memory pressure. Identify large consumers =
using <code>sys.dm_os_memory_brokers</code></p></li>
</ol></li>
<li><p>Check if Process:Private Bytes is high</p>
<ol start=3D"1">
<li><p>If yes, there is internal memory pressure other than the buffer. Ide=
ntify with <code>sys.dm_os_memory_clerks</code></p></li>
</ol></li>
<li><p>Finally, check for memory errors in the OS log and SQL Server log</p=
></li>
</ol></li>
<li><p>Optimizing Application Workload</p>
<ol start=3D"1">
<li><p>Capture all SQL queries using Extended Events (Chapter 6) or Query S=
tore (Chapter 11), then group the output on the <code>Reads</code> column</=
p>
<ol start=3D"1">
<li><p>Queries with the highest number of logical reads contribute most oft=
en to memory stress</p></li>
</ol></li>
<li><p><code>sys.dm_exec_query_stats</code> can also be used for a quick an=
d easy analysis, but since it=E2=80=99s based on cache it may not be as acc=
urate as EE</p></li>
</ol></li>
<li><p>Allocating More Memory to SQL Server</p>
<ol start=3D"1">
<li><p>Hard page faults mean that the memory requirement of SQL Server is m=
ore than the max server memory value</p></li>
<li><p>In this case, the max server memory configuration should be increase=
d accordingly (assuming enough physical memory is available in the system)<=
/p></li>
<li><p>If using in-memory OLTP storage, the memory percentages allocated to=
 the resource pools defined may need to be adjusted</p></li>
</ol></li>
<li><p>Moving In-Memory Tables Back to Standard Storage</p>
<ol start=3D"1">
<li><p>Keep an eye on general query performance metrics for in-memory table=
s since not all tables or workloads benefit from them</p></li>
<li><p>See Chapter 24 for more details</p></li>
</ol></li>
<li><p>Increasing System Memory</p>
<ol start=3D"1">
<li><p>To identify which queries are using more memory, query <code>sys.dm_=
exec_query_memory_grants</code> to see I/O use</p>
<ol start=3D"1">
<li><p>Be careful running this query on systems already under memory stress=
</p></li>
</ol></li>
<li><p>If no queries stand out, the easiest and quickest resolution may be =
to simply increase system memory by purchasing and installing more</p></li>
</ol></li>
<li><p> Changing from a 32-Bit to a 64-Bit Processor</p>
<ol start=3D"1">
<li><p>Since SQL Server 2012, a 32-bit instance of SQL Server is limited to=
 accessing only 3GB of memory</p>
<ol start=3D"1">
<li><p>Because of this limitation, only small systems should be running 32-=
bit versions</p></li>
</ol></li>
<li><p>64-bit processors can access up to 24TB depending on the version of =
the OS and the specific processor type</p></li>
<li><p>SQL Server 2017 does not support the x86 chip set and must be run on=
 a 64-bit processor</p></li>
</ol></li>
<li><p>Compressing Data</p>
<ol start=3D"1">
<li><p>Less system memory is used because compressed data remains compresse=
d in memory</p></li>
<li><p>There is a CPU cost, so keep an eye on that to be sure you=E2=80=99r=
e not just transferring stress</p></li>
<li><p>Depending on the nature of your data, there may not be much compress=
ion</p></li>
</ol></li>
<li><p>Enabling 3GB of Process Address Space</p>
<ol start=3D"1">
<li><p>For 32-bit OS systems with 16GB of physical memory or less, less mem=
ory can be allocated to the OS and more to applications. This is done by sp=
ecifying a /3GB switch in the <code>boot.ini</code> file</p>
<ol start=3D"1">
<li><p>Not applicable to SQL Server 2017+</p></li>
</ol></li>
</ol></li>
<li><p>Addressing Fragmentation</p>
<ol start=3D"1">
<li><p>While fragmentation may affect storage, it also can affect memory</p=
>
<ol start=3D"1">
<li><p>Fragmented pages have lots of empty space, all of which are retrieve=
d from disk and into memory</p></li>
</ol></li>
<li><p>See Chapter 17 for details</p></li>
</ol></li>
</ol>
<ul>
<li><p><a href=3D"https://learning.oreilly.com/library/view/sql-server-2017=
/9781484238882/html/323849_5_En_5_Chapter.xhtml" class=3D"external-link" re=
l=3D"nofollow">https://learning.oreilly.com/library/view/sql-server-2017/97=
81484238882/html/323849_5_En_5_Chapter.xhtml</a> </p></li>
</ul>
</div>
</div>
<div id=3D"expander-605288124" class=3D"expand-container">
<div id=3D"expander-control-605288124" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">C. Disk P=
erformance Analysis</span>
</div>
<div id=3D"expander-content-605288124" class=3D"expand-content">
<h3 id=3D"DBAServices-C.DiskPerformanceAnalysis">C. Disk Performance Analys=
is</h3>
<p>Although memory and CPUs have become faster and faster, disks and the di=
sk subsystem remains one of the slowest parts of any computing system. Addi=
tionally, I/O is affected by many factors such as:</p>
<ul>
<li><p>Virtual environments with shared disks </p></li>
<li><p>Antivirus programs</p></li>
<li><p>Filter drivers acting as bottlenecks in I/O paths</p></li>
</ul>
<h4 id=3D"DBAServices-I.DiskCounters">I. Disk Counters</h4>
<ol start=3D"1">
<li><p>PhysicalDisk - Disk Transfers/sec</p>
<ol start=3D"1">
<li><p>Although disc activity can be divided into LogicalDisk partitions, b=
ottlenecks ultimately occur on the physical disk</p></li>
<li><p>Note that RAID (redundant array of independent disks) and SAN (stora=
ge area network) systems are treated as a single physical disk</p></li>
<li><p>Numbers are more in line with platter-style disk drives that are fas=
t becoming obsolete</p>
<ol start=3D"1">
<li><p>Modern setups will use solid-state drives, SSD arrays, or iSCSI inte=
rfaces</p></li>
</ol></li>
<li><p>Disk Transfers/sec monitors the rate of read and write operations on=
 the disk</p>
<ol start=3D"1">
<li><p><strong>A typical hard disk drive can do about 180 disk transfers pe=
r second for sequential I/O (IOPS) and 100 disk transfers per second for ra=
ndom I/O</strong></p>
<ol start=3D"1">
<li><p>Random I/O is lower because more disk arm and head movements are inv=
olved</p></li>
<li><p>OLTP workloads rely heavily on random access for its singleton/small=
 operations and thus is typically constrained more by disk transfers/sec th=
an disk bytes/sec</p></li>
<li><p><strong>For comparison, an SSD can be anywhere from around 5,000 IOP=
S to as much as 500,000 IOPS</strong></p></li>
</ol></li>
</ol></li>
</ol></li>
<li><p>PhysicalDisk - Disk Bytes/Sec</p>
<ol start=3D"1">
<li><p>Monitors the rate at which bytes are transferred to or from the disk=
 during read or write operations</p>
<ol start=3D"1">
<li><p><strong>A typical disk spinning at 7200RPM can transfer about 1000MB=
 per second</strong></p></li>
<li><p>If the amount of data transfer exceeds capacity, there will be a bac=
klog shown by the Disk Queue Length counters</p></li>
<li><p>This is usually a nonissue for OLTP applications, which access small=
 amounts of data in individual database requests</p></li>
</ol></li>
</ol></li>
<li><p>PhysicalDisk - Avg. Disk Sec/Read and Avg. Disk Sec/Write</p>
<ol start=3D"1">
<li><p>These track the average amount of time it takes in milliseconds to r=
ead from or write to a disk</p></li>
<li><p><strong>Brent Ozar recommends these be less than 100 ms, whereas Gra=
nt Fritchey recommends less than 10 ms </strong></p></li>
<li><p>In terms of measuring performance of the I/O system, these are the s=
ingle best measure</p>
<ol start=3D"1">
<li><p>They will not tell which query or queries are causing problems, but =
rather how the I/O system is behaving as a whole</p></li>
</ol></li>
</ol></li>
<li><p>SQLServer:Buffer Manager - Page reads/sec and Page writes/sec</p>
<ol start=3D"1">
<li><p>Knowing the pages being moved into and out of the buffer manager ind=
icates whether the I/O (shown in Avg. Disk Sec/Read and Avg. Disk Sec/Write=
) is within SQL Server</p>
<ol start=3D"1">
<li><p>This measure is needed to see the complete picture</p></li>
</ol></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-II.DynamicManagementObjects(DMOs)">II. Dynamic Manage=
ment Objects (DMOs)</h4>
<ol start=3D"1">
<li><p>Sys.dm_io_virtual_file_stats</p>
<ol start=3D"1">
<li><p>Returns information about the files that make up a database</p>
<ol start=3D"1">
<li><p>Can see which file (log or data) is being pegged</p></li>
</ol></li>
<li><p>Called like so: <code>SELECT * FROM sys.dm_io_virtual_file_stats(DB_=
ID('AdventureWorks2017'), 2) AS divfs;</code></p></li>
<li><p>Stall data is the time that users are waiting on different I/O opera=
tions</p>
<ol start=3D"1">
<li><p><code>io_stall_read_ms</code> represents the amount of time in milli=
seconds that users are waiting for reads</p></li>
<li><p><code>io_stall_write_ms</code> shows the amount of time that write o=
perations have had to wait on this file within the database</p></li>
<li><p><code>io_stall</code> represents all waits on I/O for the file</p></=
li>
</ol></li>
<li><p>To put stall data in perspective, compare it with <code>sample_ms</c=
ode>, which shows the amount of time measured</p></li>
<li><p>Once confirmed a file is pegged, further investigate using Paul Rand=
al=E2=80=99s wait statistics query and Perfmon metrics</p></li>
</ol></li>
<li><p>Sys.dm_os_wait_stats</p>
<ol start=3D"1">
<li><p>Shows </p>
<ol start=3D"1">
<li><p>Aggregate information about waits on the system (total wait time)</p=
></li>
<li><p>A count of the waits that have occurred</p></li>
<li><p>A max value for these waits</p>
<ul>
<li><p>Useful since it=E2=80=99s possible that a single wait could have cau=
sed the majority of the wait time</p></li>
</ul></li>
</ol></li>
<li><p>Queried like so: <code>SELECT * FROM sys.dm_os_wait_stats AS dows WH=
ERE wait_type LIKE 'PAGEIOLATCH%';</code></p>
<ol start=3D"1">
<li><p>I/O latch operations cause waits to occur and indicates a bottleneck=
 in I/O</p></li>
<li><p>Aside from PAGEIOLATCH, other processes of interest are</p>
<ul>
<li><p>WRITELOG</p></li>
<li><p>LOGBUFFER</p></li>
<li><p>ASYNC_IO_COMPLETION</p></li>
</ul></li>
</ol></li>
<li><p>Values must be compared to a baseline </p></li>
<li><p>Can also be seen in the Query Store (Chapter 11)</p></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-III.DiscBottleneckResolutions">III. Disc Bottleneck R=
esolutions</h4>
<ol start=3D"1">
<li><p>Optimizing application workload</p>
<ol start=3D"1">
<li><p>Capture all SQL queries using Extended Events (Chapter 6) or Query S=
tore (Chapter 11), then group the output on the <code>Reads</code> or <code=
>Writes</code> column</p>
<ol start=3D"1">
<li><p>Queries with the highest number of logical reads or writes will be t=
he ones that cause a great deal of disk I/O</p></li>
</ol></li>
</ol></li>
<li><p>Using a faster I/O path</p>
<ol start=3D"1">
<li><p>Upgrade disk drives</p></li>
</ol></li>
<li><p>Using a RAID array</p>
<ol start=3D"1">
<li><p>RAID 0: Striping with no fault tolerance</p>
<ol start=3D"1">
<li><p>The failure of any disk in the array will cause complete data loss i=
n the disk subsystem. Therefore, this should not be used for any database f=
iles, except perhaps <code>tempdb</code>.</p></li>
<li><p><code>I/Os per disk =3D (Reads + Writes) / Number of disks in the ar=
ray</code></p></li>
</ol></li>
<li><p>RAID 1: Mirroring</p>
<ol start=3D"1">
<li><p>Can be used where the complete data can be accommodated in one disk =
only</p></li>
<li><p><code>master</code> and <code>msdb</code> are usually small enough t=
o use RAID 1</p></li>
<li><p><code>I/Os per disk =3D (Reads + 2 X Writes) / 2</code> </p></li>
</ol></li>
<li><p>RAID 5: Striping with parity</p>
<ol start=3D"1">
<li><p>An acceptable option in many cases. It provides reasonable fault tol=
erance by using only one extra disk to save the computed parity of the data=
 in other disks</p></li>
<li><p><code>I/Os per disk =3D (Reads + 4 X Writes) / Number of disks in th=
e array</code></p>
<ul>
<li><p>Four I/Os are needed for each write request since read and write I/O=
s are needed for both the data and parity</p>
<ul>
<li><p>Due to the magnification of write operations, use RAID 5 on read-onl=
y volumes or volumes with a low percentage of disk writes (10 percent or le=
ss)</p></li>
</ul></li>
<li><p>This means, where possible, transactional log files should not be pl=
aced on a RAID 5 array</p></li>
<li><p>Data files should be fine since write operations are intermittent an=
d batched together to improve efficiency</p></li>
</ul></li>
</ol></li>
<li><p>RAID 6: RAID 5 with an extra parity block</p>
<ol start=3D"1">
<li><p>Same performance as RAID 5 with a little overhead for writes</p></li=
>
</ol></li>
<li><p>RAID 1+0 (RAID 10): Striping with mirroring</p>
<ol start=3D"1">
<li><p>Much more expensive than RAID 5</p></li>
<li><p>Should be used where a large volume is required to save data and mor=
e than 10 percent of disk requests are writes</p></li>
<li><p>Read performance is also very good since it supports <em>split seeks=
</em> (which distributes the read operations between disks)</p></li>
<li><p>Use RAID 1+0 wherever performance is critical</p></li>
<li><p><code>I/Os per disk =3D (Read + 2 X Writes) / Number of disks in the=
 array</code></p></li>
</ol></li>
</ol></li>
<li><p>Using (or removing) a SAN system</p>
<ol start=3D"1">
<li><p>Because of their size, complexity, and cost, SANs are not necessaril=
y a good solution in all cases</p>
<ol start=3D"1">
<li><p>In some cases the solution may be going to local disks and getting r=
id of the SAN</p></li>
</ol></li>
<li><p>The principal strength of SAN systems is not reflected in performanc=
e but rather in the areas of scalability, availability, and maintenance</p>
<ol start=3D"1">
<li><p>Depending on the amount of data, direct-attached storage (DAS) can r=
un faster</p></li>
</ol></li>
<li><p>SAN devices can also use Internet Small Computing System Interface (=
iSCSI) to connect a device to a network device, which acts as locally attac=
hed storage (and works nearly as fast)</p></li>
</ol></li>
<li><p>Using solid-state drives</p>
<ol start=3D"1">
<li><p>These drives use memory instead of spinning disks to store informati=
on </p></li>
<li><p>They=E2=80=99re quiet, lower power, and supremely fast, but also qui=
te expensive</p></li>
<li><p>You can also put SSDs into arrays through SAN or RAID, further incre=
asing performance</p></li>
<li><p>For a hardware-only solution, implementing SSDs is probably the best=
 operation you can do for a system that is I/O bound</p></li>
</ol></li>
<li><p>Aligning disks properly</p>
<ol start=3D"1">
<li><p>Windows Server 2016 aligns disks as part of the install process, so =
modern servers should not be running into this issue</p></li>
<li><p>When moving volumes from a pre-Windows Server 2008 system, they need=
 to be reformatted to get the alignment set appropriately</p></li>
<li><p>Data on disk is stored as a series of <em>sectors </em>(or <em>block=
s</em>), which in turn as stored on tracks. Partitions should be aligned so=
 you=E2=80=99re storing the correct number of sectors for each track.</p></=
li>
</ol></li>
<li><p>Adding system memory</p>
<ol start=3D"1">
<li><p>The less memory the system has, the more the disk subsystem is used<=
/p></li>
</ol></li>
<li><p>Creating multiple files and filegroups (for data files)</p>
<ol start=3D"1">
<li><p>By separating tables that are frequently joined into separate filegr=
oups and then putting files within the filegroups on separate disks or LUNS=
, the separated I/O paths can result in improved performance</p>
<ol start=3D"1">
<li><p>Be aware that this can also lead to worse performance if the disks a=
re not properly configured or get overloaded </p>
<ul>
<li><p>Having more disks does not automatically mean more I/O</p></li>
</ul></li>
</ol></li>
<li><p>If multiple filegroups are to be used, it is recommended that the pr=
imary filegroup be used only for system objects, and secondary filegroups b=
e used only for user objects</p>
<ol start=3D"1">
<li><p>This approach improves the ability to recover from corruption</p></l=
i>
</ol></li>
</ol></li>
<li><p>Moving the log files to a separate physical drive</p>
<ol start=3D"1">
<li><p>Transaction log files should always, when possible, be located on a =
separate hard disk drive from all other database files</p>
<ol start=3D"1">
<li><p>Transaction log activity primarily consists of sequential write I/O<=
/p>
<ul>
<li><p>Data files, on the other hand, leans more towards nonsequential (or =
random) I/O</p></li>
</ul></li>
<li><p>Having a single transaction log file on a dedicated hard disk can re=
sult in I/O performance improvements because the disk can concentrate on se=
quential I/O</p>
<ul>
<li><p>Multiple log files on a single disk brings you back to random I/O ag=
ain</p></li>
<li><p>The idea is having the physical disk spindle head move as little as =
possible</p>
<ul>
<li><p>While this doesn=E2=80=99t apply to SSD disk, distribution the work =
to multiple locations will still improve performance</p></li>
</ul></li>
</ul></li>
</ol></li>
<li><p>An exception to this rule is for read-only databases, where no write=
 operations are performed on the log file</p></li>
<li><p>As a general rule of them, try to isolate files with high I/O from o=
ther files with high I/O</p>
<ol start=3D"1">
<li><p>To identify these files, use <code>sys.dm_io_virtual_file_stats</cod=
e></p></li>
</ol></li>
</ol></li>
<li><p>Using partitioned tables</p>
<ol start=3D"1">
<li><p>While partitioning is primarily a tool for making data management ea=
sier, it can increase speed because queries against well-defined partitions=
 only access files with the partitions of interest</p>
<ol start=3D"1">
<li><p>Ex. If data is partitioned by month, months in the past can be set t=
o read-only and compressed</p></li>
</ol></li>
<li><p>This should not be relied as the primary method of enhancing perform=
ance</p></li>
</ol></li>
</ol>
</div>
</div>
<div id=3D"expander-1491179508" class=3D"expand-container">
<div id=3D"expander-control-1491179508" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">D. CPU Pe=
rformance Analysis</span>
</div>
<div id=3D"expander-content-1491179508" class=3D"expand-content">
<h3 id=3D"DBAServices-D.CPUPerformanceAnalysis">D. CPU Performance Analysis=
</h3>
<p>The measures covered here are focused on the operating systems and SQL S=
erver. In a virtualized environment, the measures we=E2=80=99re looking at =
for CPU are much less likely to reflect reality. There may be external pres=
sure or even external throttling, none of which will be visible with the co=
unters outlined here. To understand how the measures are reflecting reality=
, investigation must be made on the hypervisor or virtualization system use=
d.</p>
<p>Remember that CPU is affected by other resources since it=E2=80=99s the =
thing managing those resources, so some situations that look like a CPU pro=
blem are better explained as a disk or memory issue (although networks are =
seldom a major bottleneck).</p>
<h4 id=3D"DBAServices-I.CPUPerfmonCounters">I. CPU Perfmon Counters</h4>
<ol start=3D"1">
<li><p>Processor(_Total)% - Processor Time</p>
<ol start=3D"1">
<li><p><strong>% Processor Time should not be consistently high, or greater=
 than 80 percent (for Scott Whigham it=E2=80=99s 75 percent). Any sustained=
 time greater than 90 percent is effectively the same as 100 percent. </str=
ong></p></li>
<li><p>This counter should be used as a starting point for further investig=
ation. For example, if there is excessive disk use shown in the I/O counter=
s, a major part of the processor may be spent on managing the disk activiti=
es (can confirm by looking at the <code>% Privileged Time</code> counter of=
 the processor). In that case, the disk bottleneck should be optimized firs=
t. If the disk bottleneck, in turn, is caused by a memory bottleneck, that =
should be the priority instead.</p></li>
<li><p>You can track processor time as an aggregate of all the processors o=
n the machine, or you can track the percent utilization individually to par=
ticular processors. Use the average value as just an indicator and the indi=
vidual values as more of a measure of actual load and processing on the sys=
tem.</p></li>
<li><p>In a virtualized environment, the CPUs may be virtualized so what yo=
u=E2=80=99re seeing isn=E2=80=99t accurate. Ex: </p>
<ol start=3D"1">
<li><p>In a VMware system, if you install VMware Tools, you=E2=80=99ll be a=
ble to look at a VM Processor counter to see the processor usage of the hos=
t machine. Using this measure you can tell whether the CPU usage you=E2=80=
=99re seeing in your SO is reflected in the hosting machine or whether you=
=E2=80=99re just maxing out your virtual CPUs</p></li>
<li><p>Running HyperV, you=E2=80=99d need to look to <code>\Hyper-V Hypervi=
sor Logical Processor(_Total)\% Total Run Time</code> for the same measure<=
/p></li>
</ol></li>
</ol></li>
<li><p>Processor(_Total)% - % Privileged</p>
<ol start=3D"1">
<li><p><em>Privileged </em>(or <em>kernel</em>) mode (as opponed to <em>use=
r mode</em>) reflects the time spent of system-level activities, including =
managing disk access and other external processes. </p></li>
<li><p><strong>The average value is 5 to 10 percent. If 20 to 25 percent or=
 more, there could be I/O issues (ex. defective components), a filter drive=
r such as encryption services, or even out-of-date drivers.</strong></p></l=
i>
</ol></li>
<li><p>System - Processor Queue Length</p>
<ol start=3D"1">
<li><p>This is the number of threads ready to run (or requests outstanding)=
 in the processor queue. There is only a single processor queue, even on co=
mputers with multiple processors.</p></li>
<li><p><strong>On systems with lower CPU utilization, this counter is typic=
ally 0 or 1</strong></p>
<ol start=3D"1">
<li><p><strong>In general, it shouldn=E2=80=99t be more than two times the =
number of schedulers (usually 1:1 with processors) </strong></p>
<ol start=3D"1">
<li><p><strong>Assuming a system with 1 processor and 1 scheduler, a sustai=
ned counter of greater than 2 generally indicates processor congestion or b=
ottleneck</strong></p></li>
</ol></li>
<li><p><strong>PAL is fine with anything less than 10 </strong></p></li>
</ol></li>
<li><p>This is a more certain indicator of a busy processor than <code>% Pr=
ocessor Time</code></p></li>
</ol></li>
<li><p>System - Context Switches/sec</p>
<ol start=3D"1">
<li><p>This monitors the combined rate at which all processors are switched=
 from one thread to another (a.k.a. the sum of <code>Thread:Context Switche=
s/sec</code> for all threads running on all processors). Context switches o=
ccur when a thread:</p>
<ol start=3D"1">
<li><p>Voluntarily relinquishes the processor</p></li>
<li><p>Is preempted by a higher priority thread</p></li>
<li><p>Switches between user mode and privileged mode to use an executive o=
r subsystem service</p></li>
</ol></li>
<li><p><strong>On average this should be &lt; 5,000, but compare to the bas=
eline since it depends on CPU speed</strong></p></li>
</ol></li>
<li><p>SQL Server:SQL Statistics - Batch Requests/sec</p>
<ol start=3D"1">
<li><p>Measures SQL command batches received per second, which is a good in=
dicator of how much load is being placed on the processor. </p></li>
<li><p><strong>What=E2=80=99s normal differs based on your standard workloa=
d, although 10,000 requests in a second would be definitely considered a bu=
sy system.</strong></p></li>
</ol></li>
<li><p>SQL Server:SQL Statistics - SQL Compilations/sec</p>
<ol start=3D"1">
<li><p>Shows both the number of batch compiles and statement recompiles, wh=
ich are expensive operations.</p></li>
<li><p>Must compare with baseline to detect significant or sustained spikes=
 in compilations</p></li>
<li><p>Expect this number to be extremely high=E2=80=A6</p>
<ol start=3D"1">
<li><p>When a server is first turned on, or after a failover or any other s=
tartup type event</p></li>
<li><p> If some type of object-relational mapping engine, such as nHibernat=
e or Entity Framework is used</p></li>
</ol></li>
<li><p>See Chapter 14 on how to optimize this</p></li>
</ol></li>
<li><p>SQL Server:SQL Statistics - SQL Recompilations/sec</p>
<ol start=3D"1">
<li><p>Measures the recompiles of both batches and statements, which can le=
ad to processor stress</p></li>
<li><p><strong>SQLwatch.io recommends that the ratio percentage of SQL Re-C=
ompilations to SQL Compilations be less than 10%</strong></p></li>
<li><p>See Chapter 17 for details on how to optimize this</p></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-II.OtherToolsforMeasuringCPUPerformance">II. Other To=
ols for Measuring CPU Performance</h4>
<ol start=3D"1">
<li><p>Dynamic Management Objects (DMOs)</p>
<ol start=3D"1">
<li><p>Sys.dm_os_wait_stats</p>
<ol start=3D"1">
<li><p>Metrics must be gathered over time to understand what=E2=80=99s norm=
al on your system. An increasing signal wait time can indicate CPU bottlene=
cks.</p></li>
<li><p>Starting with SQL Server 2016, CXPACKET waits have been split into C=
XPACKET and CXCONSUMER waits to differentiate between the producers vs cons=
umers of parallelism, respectively. In these systems, CXPACKET is a wait th=
at indicates real load on the system that affects CPU.</p></li>
</ol></li>
<li><p>Sys.dm_os_workers and Sys.dm_os_schedulers</p>
<ol start=3D"1">
<li><p>Worker and scheduler threads within the Windows operating system sho=
w the number of processes that are in a runnable state. </p></li>
<li><p>Running these regularly will indicate how processor load is changing=
.</p></li>
</ol></li>
</ol></li>
<li><p>Query Store</p>
<ol start=3D"1">
<li><p>The Query Store can be used to capture</p>
<ol start=3D"1">
<li><p>The aggregated CPU usage of the query in question</p></li>
<li><p>The wait statistics for queries, including any related to CPU</p></l=
i>
</ol></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-III.ProcessorBottleneckResolutions">III. Processor Bo=
ttleneck Resolutions</h4>
<ol start=3D"1">
<li><p>Optimizing application workload</p>
<ol start=3D"1">
<li><p>First, capture processor-intensive queries via</p>
<ol start=3D"1">
<li><p>Extended Events (Chapter 6) with output grouped on the CPU column</p=
></li>
<li><p><code>sys.query_store_runtime_stats</code> in the Query Store (Chapt=
er 11), which shows multiple, aggregated, CPU metrics on a per-query basis<=
/p></li>
<li><p>Querying the <code>sys.dm_exec_query_stats</code> or <code>sys.dm_ex=
ec_procedure_stats</code> DMV</p></li>
</ol></li>
<li><p>Next, analyze and optimize those queries</p>
<ol start=3D"1">
<li><p>Frequently, the cause for CPU stress is not extensive calculations b=
ut contention with logical I/O</p></li>
<li><p>Common queries and common execution plans can be tuned using a query=
 hash and query plan hash (Chapter 14)</p></li>
</ol></li>
</ol></li>
<li><p>Eliminating or reducing excessive compiles/recompiles</p>
<ol start=3D"1">
<li><p>Methods for addressing recompiles are covered in Chapter 17</p></li>
<li><p>If there are a lot more compiles compared to recompiles, it means fe=
w queries are being reused in the system. See Chapter 9 for tips on query r=
euse.</p></li>
</ol></li>
<li><p>Using more or faster processors</p>
<ol start=3D"1">
<li><p>This is an easy but potentially costly solution.</p></li>
<li><p>We can either </p>
<ol start=3D"1">
<li><p>Increase the power of individual processors </p>
<ol start=3D"1">
<li><p>Recommended when you have a high % Processor Time counter and low Pr=
ocessor Queue Length</p></li>
</ol></li>
<li><p>Add more processors (which helps the system execute more requests si=
multaneously)</p>
<ol start=3D"1">
<li><p>Recommended when you have both a high % Processor Time counter and h=
igh Processor Queue Length</p></li>
</ol></li>
</ol></li>
</ol></li>
<li><p>Not running unnecessary software</p>
<ol start=3D"1">
<li><p>Exterior applications that have nothing to do with maintaining the W=
indows server or SQL Server are best placed on a different machine</p></li>
</ol></li>
</ol>
</div>
</div>
<div id=3D"expander-320230214" class=3D"expand-container">
<div id=3D"expander-control-320230214" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">E. Networ=
k Bottleneck Analysis</span>
</div>
<div id=3D"expander-content-320230214" class=3D"expand-content">
<h3 id=3D"DBAServices-E.NetworkBottleneckAnalysis">E. Network Bottleneck An=
alysis</h3>
<p>In OLTP environments, few performance issues are because of the network.=
 Most of the network issues are in fact hardware or driver limitations or i=
ssues with switches or routers. Most of these can be best diagnosed with th=
e Network Monitor tool. That said, there Performance Monitor does provide o=
bjects that collect data on network activity.</p>
<h4 id=3D"DBAServices-I.NetworkPerfmonCounters">I. Network Perfmon Counters=
</h4>
<ol start=3D"1">
<li><p>Network Interface(Network card) - Bytes Total/sec &amp; Network Inte=
rface\Current Bandwidth </p>
<ol start=3D"1">
<li><p>Bytes Total/sec shows how the network interface card (NIC) or networ=
k adapter is performing. </p></li>
<li><p>Compare this value with that reported by the Network Interface\Curre=
nt Bandwidth performance counter, which reflects each adapter=E2=80=99s ban=
dwidth</p>
<ol start=3D"1">
<li><p><strong>To allow headroom for spikes in traffic, you should usually =
average no more than 50 percent of capacity</strong></p></li>
</ol></li>
</ol></li>
<li><p>Network Segment - % Net Utilization</p>
<ol start=3D"1">
<li><p>Represents the percentage of network bandwidth in use on a network s=
egment</p></li>
<li><p><strong>In general, the average value should be &lt; 80% of network =
bandwidth to keep room for load spikes</strong></p>
<ol start=3D"1">
<li><p>This is true even for dedicated full-duplex networks, which can acco=
unt for near 100 percent network usage</p></li>
<li><p><strong>For Ethernet networks, 30 percent is the recommended thresho=
ld when SQL Server is on a shared network hub</strong></p></li>
</ol></li>
<li><p>Note, the Network Monitor Driver must be installed to collect perfor=
mance data using the Network Segment object counters</p>
<ol start=3D"1">
<li><p>An alternative is looking at the wait statistics in <code>sys.dm_os_=
wait_stats</code> . This isn=E2=80=99t ideal however since it often returns=
 ASYNC_NETWORK_IO, which is more commonly associated with poor programming =
code that does not consume a result set efficiently.</p></li>
</ol></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-II.NetworkBottleneckResolutions">II. Network Bottlene=
ck Resolutions</h4>
<ol start=3D"1">
<li><p>Optimizing application workload</p>
<ol start=3D"1">
<li><p>Used stored procedures instead of sending a long SQL string over the=
 network</p>
<ol start=3D"1">
<li><p>Multiple database requests can also be grouped into one stored proce=
dure (important for Azure SQL Databases)</p></li>
</ol></li>
<li><p>Trim down the data set to only table columns that are used by the ap=
plication</p></li>
<li><p>Move data-intensive business logic into the database as stored proce=
dures or database triggers to reduce network round-trips</p></li>
<li><p>If data doesn=E2=80=99t change frequently, try caching the informati=
on on the application</p></li>
<li><p>Suppress things like row count using SET NOCOUNT ON at the top of qu=
eries</p></li>
</ol></li>
<li><p>Adding network adapters</p></li>
<li><p>Moderating and avoiding interruptions</p></li>
</ol>
</div>
</div>
<div id=3D"expander-1379598567" class=3D"expand-container">
<div id=3D"expander-control-1379598567" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">F. SQL Se=
rver Overall Performance</span>
</div>
<div id=3D"expander-content-1379598567" class=3D"expand-content">
<h3 id=3D"DBAServices-F.SQLServerOverallPerformance">F. SQL Server Overall =
Performance</h3>
<p>To analyze overall performance, besides examining hardware resource util=
ization, general aspects of SQL Server should also be examined.</p>
<h4 id=3D"DBAServices-I.PerfmonCountersforGenericSQLPressure">I. Perfmon Co=
unters for Generic SQL Pressure</h4>
<ol start=3D"1">
<li><p>SQLServer:Access Methods - Full Scans/sec</p>
<ol start=3D"1">
<li><p>Analyzes the possibility of missing indexes causing table scans or l=
arge data set retrievals</p>
<ol start=3D"1">
<li><p>Note that scans can also be caused when</p>
<ol start=3D"1">
<li><p>Too many rows are requested</p></li>
<li><p>The predicate is not selective enough</p></li>
<li><p>There are syntax errors (improper T-SQL)</p></li>
<li><p>The data distribution or quantity doesn=E2=80=99t support a seek</p>=
</li>
<li><p>Temporary tables are used in a stored procedure</p></li>
</ol></li>
<li><p>Use Extended Events (Chapter 5) or the Query Store (Chapter 11) to i=
dentify these queries, which will have a large number of logical reads and =
an increased CPU time</p></li>
</ol></li>
<li><p>See also counters FreeSpace Scans/sec, Table Lock Escalations/sec, &=
amp; Worktables Created/sec</p></li>
</ol></li>
<li><p>SQLServer:Latches - Total Latch Wait Time (ms) &amp; SQLServer:Locks=
(_Total) - Lock Timeouts/sec, Lock Wait Time (ms), &amp; Number of Deadlock=
s/sec</p>
<ol start=3D"1">
<li><p>Analyzes the impact of database blocking (database concurrency) on t=
he performance of SQL Server</p>
<ol start=3D"1">
<li><p>Total Latch Wait Time (ms) monitors latch requests that had to wait =
in the last second. </p>
<ol start=3D"1">
<li><p>Latches are used internally by SQL Server (not directly controlled b=
y users) to protect the integrity of internal structures, such as a table r=
ow</p></li>
<li><p>A high value here suggests SQL Server is spending too much time wait=
ing on its internal synchronization mechanism</p></li>
</ol></li>
<li><p><strong>Expect Lock Timeouts/sec to be 0 and Lock Wait Time (ms) to =
be very low</strong></p>
<ol start=3D"1">
<li><p>A nonzero value for Lock Timeouts/sec and a high value for Lock Wait=
 Time (ms) indicate that excessive blocking is occurring in the database</p=
></li>
<li><p>Remember that some degree of locks is a necessary part of the system=
. Establish a baseline to track thoroughly whether a given value is cause f=
or concern.</p></li>
</ol></li>
<li><p><strong>Number of Deadlocks/sec should also be 0</strong></p>
<ol start=3D"1">
<li><p>If nonzero, identify the victimized request and either resubmit the =
database request automatically or suggest that the user do so</p></li>
<li><p>Troubleshoot and resolve the deadlock using techniques from Chapter =
21</p></li>
</ol></li>
</ol></li>
</ol></li>
<li><p>SQLServer:SQL Statistics - SOL Re-Compilations/sec</p>
<ol start=3D"1">
<li><p>Analyzes the number of stored procedures that are recompiling</p>
<ol start=3D"1">
<li><p>Non-reusable execution plans stress the CPU because generating an ex=
ecution plan for a stored procedure requires CPU cycles</p></li>
<li><p><strong>This will never be 0 but should be as close to 0 as possible=
</strong></p>
<ol start=3D"1">
<li><p>If there are consistent spikes:</p>
<ol start=3D"1">
<li><p>Use Extended Events to identify the relevant stored procedures </p><=
/li>
<li><p>Attempt to analyze and resolve the cause of recompilations (Chapter =
17)</p></li>
</ol></li>
</ol></li>
</ol></li>
</ol></li>
<li><p>SQLServer:General Statistics - User Connections &amp; SQLServer:SQL =
Statistics - Batch Requests/sec</p>
<ol start=3D"1">
<li><p>Analyzes the volume of incoming requests and general behavior</p>
<ol start=3D"1">
<li><p>User Connections is critical for ensuring the distribution of user c=
onnections in a load-balancing environment, where SQL Server is spread over=
 several machines</p>
<ol start=3D"1">
<li><p>This number can range all over the spectrum with normal application =
behavior. Compare with a baseline to determine expected behavior.</p></li>
</ol></li>
<li><p>Batch Requests/sec allow us to estimate the number of users SQL Serv=
er can take without developing resource bottlenecks</p>
<ol start=3D"1">
<li><p>Helps understand SQL Server=E2=80=99s relationship with the number o=
f database connections</p></li>
<li><p>Helps understand SQL Server=E2=80=99s relationship with Web Requests=
/sec (or Active Server Pages.Request/sec for web applications using IIS &am=
p; ASP)</p></li>
<li><p>The value of this counter can range over a wide spectrum with normal=
 application behavior. A normal baseline is essential to determine the expe=
cted behavior.</p></li>
</ol></li>
</ol></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-II.DynamicManagementObjects">II. Dynamic Management O=
bjects</h4>
<ol start=3D"1">
<li><p>sys.dm_db_missing_index details</p>
<ol start=3D"1">
<li><p>Part of a series of DMVs collectively referred to as the <em>missing=
 indexes feature</em>, used to check for missing indexes based on execution=
 plans stored in the cache. Since they can=E2=80=99t be linked to a particu=
lar query, however, it=E2=80=99s better off to use the XML execution plan f=
or a given query (Chapter 5) or the Database Tuning Advisor (Chapter 10).</=
p></li>
</ol></li>
<li><p>sys.dm_db_index_usage_stats</p>
<ol start=3D"1">
<li><p>Shows which indexes have been used since the last restart of the SQL=
 Server instance. Not completely reliable since there are a number of ways =
that counters within this DMV get reset or removed.</p></li>
<li><p>As an alternative, a lower-level DMV <code>sys.dm_db_index_operation=
al_stats</code> can be used. It helps show where indexes are slowing down b=
ecause of contention or I/O. More on this in Chapter 20.</p></li>
</ol></li>
</ol>
<h4 id=3D"DBAServices-III.Blocking/ConcurrencyResolutions">III. Blocking/Co=
ncurrency Resolutions</h4>
<ol start=3D"1">
<li><p>Identify costly queries currently in cache using SQL Profiler or by =
querying <code>sys.dm_exec_query_stats</code> </p>
<ol start=3D"1">
<li><p>Optimize these queries appropriately</p></li>
</ol></li>
<li><p>After optimizing costly queries, analyze and resolve blocking using =
techniques from Chapter 20</p></li>
<li><p>Enable the <code>blocked_process_report</code> blocking event (Chapt=
er 20) in Extended Events (Chapter 6) to set a threshold to capture blockin=
g information.</p></li>
</ol>
</div>
</div>
<h2 id=3D"DBAServices-3.SQLServerHealthCheckTools">3. SQL Server Health Che=
ck Tools</h2>
<div id=3D"expander-1868549559" class=3D"expand-container">
<div id=3D"expander-control-1868549559" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"3582f1deb0810365b86e95312e68cb7c" widt=
h=3D"16" height=3D"16"></span><span class=3D"expand-control-text">Click her=
e to expand...</span>
</div>
<div id=3D"expander-content-1868549559" class=3D"expand-content">
<h3 id=3D"DBAServices-A.BrentOzar=E2=80=99sFirstResponderKit">A. Brent Ozar=
=E2=80=99s First Responder Kit</h3>
<p class=3D"media-group"><img height=3D"250" style=3D"margin: 2px; border: =
1px solid #ddd; box-sizing: border-box; vertical-align: text-bottom;" src=
=3D"947577c3ee36272b288b185d96eeaac9" width=3D"250"></p>
<h3 id=3D"DBAServices-B.PaulRandal=E2=80=99sWaitStatisticsQuery">B. Paul Ra=
ndal=E2=80=99s <a href=3D"https://www.sqlskills.com/blogs/paul/wait-statist=
ics-or-please-tell-me-where-it-hurts/" class=3D"external-link" rel=3D"nofol=
low">Wait Statistics Query</a></h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: sql; gutter: false; theme: Confluence" data-theme=3D"Confluence">-- Last =
updated October 1, 2021
WITH [Waits] AS
    (SELECT
        [wait_type],
        [wait_time_ms] / 1000.0 AS [WaitS],
        ([wait_time_ms] - [signal_wait_time_ms]) / 1000.0 AS [ResourceS],
        [signal_wait_time_ms] / 1000.0 AS [SignalS],
        [waiting_tasks_count] AS [WaitCount],
        100.0 * [wait_time_ms] / SUM ([wait_time_ms]) OVER() AS [Percentage=
],
        ROW_NUMBER() OVER(ORDER BY [wait_time_ms] DESC) AS [RowNum]
    FROM sys.dm_os_wait_stats
    WHERE [wait_type] NOT IN (
        -- These wait types are almost 100% never a problem and so they are
        -- filtered out to avoid them skewing the results. Click on the URL
        -- for more information.
        N'BROKER_EVENTHANDLER', -- https://www.sqlskills.com/help/waits/BRO=
KER_EVENTHANDLER
        N'BROKER_RECEIVE_WAITFOR', -- https://www.sqlskills.com/help/waits/=
BROKER_RECEIVE_WAITFOR
        N'BROKER_TASK_STOP', -- https://www.sqlskills.com/help/waits/BROKER=
_TASK_STOP
        N'BROKER_TO_FLUSH', -- https://www.sqlskills.com/help/waits/BROKER_=
TO_FLUSH
        N'BROKER_TRANSMITTER', -- https://www.sqlskills.com/help/waits/BROK=
ER_TRANSMITTER
        N'CHECKPOINT_QUEUE', -- https://www.sqlskills.com/help/waits/CHECKP=
OINT_QUEUE
        N'CHKPT', -- https://www.sqlskills.com/help/waits/CHKPT
        N'CLR_AUTO_EVENT', -- https://www.sqlskills.com/help/waits/CLR_AUTO=
_EVENT
        N'CLR_MANUAL_EVENT', -- https://www.sqlskills.com/help/waits/CLR_MA=
NUAL_EVENT
        N'CLR_SEMAPHORE', -- https://www.sqlskills.com/help/waits/CLR_SEMAP=
HORE
=20
        -- Maybe comment this out if you have parallelism issues
        N'CXCONSUMER', -- https://www.sqlskills.com/help/waits/CXCONSUMER
=20
        -- Maybe comment these four out if you have mirroring issues
        N'DBMIRROR_DBM_EVENT', -- https://www.sqlskills.com/help/waits/DBMI=
RROR_DBM_EVENT
        N'DBMIRROR_EVENTS_QUEUE', -- https://www.sqlskills.com/help/waits/D=
BMIRROR_EVENTS_QUEUE
        N'DBMIRROR_WORKER_QUEUE', -- https://www.sqlskills.com/help/waits/D=
BMIRROR_WORKER_QUEUE
        N'DBMIRRORING_CMD', -- https://www.sqlskills.com/help/waits/DBMIRRO=
RING_CMD
        N'DIRTY_PAGE_POLL', -- https://www.sqlskills.com/help/waits/DIRTY_P=
AGE_POLL
        N'DISPATCHER_QUEUE_SEMAPHORE', -- https://www.sqlskills.com/help/wa=
its/DISPATCHER_QUEUE_SEMAPHORE
        N'EXECSYNC', -- https://www.sqlskills.com/help/waits/EXECSYNC
        N'FSAGENT', -- https://www.sqlskills.com/help/waits/FSAGENT
        N'FT_IFTS_SCHEDULER_IDLE_WAIT', -- https://www.sqlskills.com/help/w=
aits/FT_IFTS_SCHEDULER_IDLE_WAIT
        N'FT_IFTSHC_MUTEX', -- https://www.sqlskills.com/help/waits/FT_IFTS=
HC_MUTEX
 =20
       -- Maybe comment these six out if you have AG issues
        N'HADR_CLUSAPI_CALL', -- https://www.sqlskills.com/help/waits/HADR_=
CLUSAPI_CALL
        N'HADR_FILESTREAM_IOMGR_IOCOMPLETION', -- https://www.sqlskills.com=
/help/waits/HADR_FILESTREAM_IOMGR_IOCOMPLETION
        N'HADR_LOGCAPTURE_WAIT', -- https://www.sqlskills.com/help/waits/HA=
DR_LOGCAPTURE_WAIT
        N'HADR_NOTIFICATION_DEQUEUE', -- https://www.sqlskills.com/help/wai=
ts/HADR_NOTIFICATION_DEQUEUE
        N'HADR_TIMER_TASK', -- https://www.sqlskills.com/help/waits/HADR_TI=
MER_TASK
        N'HADR_WORK_QUEUE', -- https://www.sqlskills.com/help/waits/HADR_WO=
RK_QUEUE
=20
        N'KSOURCE_WAKEUP', -- https://www.sqlskills.com/help/waits/KSOURCE_=
WAKEUP
        N'LAZYWRITER_SLEEP', -- https://www.sqlskills.com/help/waits/LAZYWR=
ITER_SLEEP
        N'LOGMGR_QUEUE', -- https://www.sqlskills.com/help/waits/LOGMGR_QUE=
UE
        N'MEMORY_ALLOCATION_EXT', -- https://www.sqlskills.com/help/waits/M=
EMORY_ALLOCATION_EXT
        N'ONDEMAND_TASK_QUEUE', -- https://www.sqlskills.com/help/waits/OND=
EMAND_TASK_QUEUE
        N'PARALLEL_REDO_DRAIN_WORKER', -- https://www.sqlskills.com/help/wa=
its/PARALLEL_REDO_DRAIN_WORKER
        N'PARALLEL_REDO_LOG_CACHE', -- https://www.sqlskills.com/help/waits=
/PARALLEL_REDO_LOG_CACHE
        N'PARALLEL_REDO_TRAN_LIST', -- https://www.sqlskills.com/help/waits=
/PARALLEL_REDO_TRAN_LIST
        N'PARALLEL_REDO_WORKER_SYNC', -- https://www.sqlskills.com/help/wai=
ts/PARALLEL_REDO_WORKER_SYNC
        N'PARALLEL_REDO_WORKER_WAIT_WORK', -- https://www.sqlskills.com/hel=
p/waits/PARALLEL_REDO_WORKER_WAIT_WORK
        N'PREEMPTIVE_OS_FLUSHFILEBUFFERS', -- https://www.sqlskills.com/hel=
p/waits/PREEMPTIVE_OS_FLUSHFILEBUFFERS
        N'PREEMPTIVE_XE_GETTARGETSTATE', -- https://www.sqlskills.com/help/=
waits/PREEMPTIVE_XE_GETTARGETSTATE
        N'PVS_PREALLOCATE', -- https://www.sqlskills.com/help/waits/PVS_PRE=
ALLOCATE
        N'PWAIT_ALL_COMPONENTS_INITIALIZED', -- https://www.sqlskills.com/h=
elp/waits/PWAIT_ALL_COMPONENTS_INITIALIZED
        N'PWAIT_DIRECTLOGCONSUMER_GETNEXT', -- https://www.sqlskills.com/he=
lp/waits/PWAIT_DIRECTLOGCONSUMER_GETNEXT
        N'PWAIT_EXTENSIBILITY_CLEANUP_TASK', -- https://www.sqlskills.com/h=
elp/waits/PWAIT_EXTENSIBILITY_CLEANUP_TASK
        N'QDS_PERSIST_TASK_MAIN_LOOP_SLEEP', -- https://www.sqlskills.com/h=
elp/waits/QDS_PERSIST_TASK_MAIN_LOOP_SLEEP
        N'QDS_ASYNC_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_ASY=
NC_QUEUE
        N'QDS_CLEANUP_STALE_QUERIES_TASK_MAIN_LOOP_SLEEP',
            -- https://www.sqlskills.com/help/waits/QDS_CLEANUP_STALE_QUERI=
ES_TASK_MAIN_LOOP_SLEEP
        N'QDS_SHUTDOWN_QUEUE', -- https://www.sqlskills.com/help/waits/QDS_=
SHUTDOWN_QUEUE
        N'REDO_THREAD_PENDING_WORK', -- https://www.sqlskills.com/help/wait=
s/REDO_THREAD_PENDING_WORK
        N'REQUEST_FOR_DEADLOCK_SEARCH', -- https://www.sqlskills.com/help/w=
aits/REQUEST_FOR_DEADLOCK_SEARCH
        N'RESOURCE_QUEUE', -- https://www.sqlskills.com/help/waits/RESOURCE=
_QUEUE
        N'SERVER_IDLE_CHECK', -- https://www.sqlskills.com/help/waits/SERVE=
R_IDLE_CHECK
        N'SLEEP_BPOOL_FLUSH', -- https://www.sqlskills.com/help/waits/SLEEP=
_BPOOL_FLUSH
        N'SLEEP_DBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP_D=
BSTARTUP
        N'SLEEP_DCOMSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP=
_DCOMSTARTUP
        N'SLEEP_MASTERDBREADY', -- https://www.sqlskills.com/help/waits/SLE=
EP_MASTERDBREADY
        N'SLEEP_MASTERMDREADY', -- https://www.sqlskills.com/help/waits/SLE=
EP_MASTERMDREADY
        N'SLEEP_MASTERUPGRADED', -- https://www.sqlskills.com/help/waits/SL=
EEP_MASTERUPGRADED
        N'SLEEP_MSDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLEEP=
_MSDBSTARTUP
        N'SLEEP_SYSTEMTASK', -- https://www.sqlskills.com/help/waits/SLEEP_=
SYSTEMTASK
        N'SLEEP_TASK', -- https://www.sqlskills.com/help/waits/SLEEP_TASK
        N'SLEEP_TEMPDBSTARTUP', -- https://www.sqlskills.com/help/waits/SLE=
EP_TEMPDBSTARTUP
        N'SNI_HTTP_ACCEPT', -- https://www.sqlskills.com/help/waits/SNI_HTT=
P_ACCEPT
        N'SOS_WORK_DISPATCHER', -- https://www.sqlskills.com/help/waits/SOS=
_WORK_DISPATCHER
        N'SP_SERVER_DIAGNOSTICS_SLEEP', -- https://www.sqlskills.com/help/w=
aits/SP_SERVER_DIAGNOSTICS_SLEEP
        N'SQLTRACE_BUFFER_FLUSH', -- https://www.sqlskills.com/help/waits/S=
QLTRACE_BUFFER_FLUSH
        N'SQLTRACE_INCREMENTAL_FLUSH_SLEEP', -- https://www.sqlskills.com/h=
elp/waits/SQLTRACE_INCREMENTAL_FLUSH_SLEEP
        N'SQLTRACE_WAIT_ENTRIES', -- https://www.sqlskills.com/help/waits/S=
QLTRACE_WAIT_ENTRIES
        N'VDI_CLIENT_OTHER', -- https://www.sqlskills.com/help/waits/VDI_CL=
IENT_OTHER
        N'WAIT_FOR_RESULTS', -- https://www.sqlskills.com/help/waits/WAIT_F=
OR_RESULTS
        N'WAITFOR', -- https://www.sqlskills.com/help/waits/WAITFOR
        N'WAITFOR_TASKSHUTDOWN', -- https://www.sqlskills.com/help/waits/WA=
ITFOR_TASKSHUTDOWN
        N'WAIT_XTP_RECOVERY', -- https://www.sqlskills.com/help/waits/WAIT_=
XTP_RECOVERY
        N'WAIT_XTP_HOST_WAIT', -- https://www.sqlskills.com/help/waits/WAIT=
_XTP_HOST_WAIT
        N'WAIT_XTP_OFFLINE_CKPT_NEW_LOG', -- https://www.sqlskills.com/help=
/waits/WAIT_XTP_OFFLINE_CKPT_NEW_LOG
        N'WAIT_XTP_CKPT_CLOSE', -- https://www.sqlskills.com/help/waits/WAI=
T_XTP_CKPT_CLOSE
        N'XE_DISPATCHER_JOIN', -- https://www.sqlskills.com/help/waits/XE_D=
ISPATCHER_JOIN
        N'XE_DISPATCHER_WAIT', -- https://www.sqlskills.com/help/waits/XE_D=
ISPATCHER_WAIT
        N'XE_TIMER_EVENT' -- https://www.sqlskills.com/help/waits/XE_TIMER_=
EVENT
        )
    AND [waiting_tasks_count] &gt; 0
    )
SELECT
    MAX ([W1].[wait_type]) AS [WaitType],
    CAST (MAX ([W1].[WaitS]) AS DECIMAL (16,2)) AS [Wait_S],
    CAST (MAX ([W1].[ResourceS]) AS DECIMAL (16,2)) AS [Resource_S],
    CAST (MAX ([W1].[SignalS]) AS DECIMAL (16,2)) AS [Signal_S],
    MAX ([W1].[WaitCount]) AS [WaitCount],
    CAST (MAX ([W1].[Percentage]) AS DECIMAL (5,2)) AS [Percentage],
    CAST ((MAX ([W1].[WaitS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)) =
AS [AvgWait_S],
    CAST ((MAX ([W1].[ResourceS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,=
4)) AS [AvgRes_S],
    CAST ((MAX ([W1].[SignalS]) / MAX ([W1].[WaitCount])) AS DECIMAL (16,4)=
) AS [AvgSig_S],
    CAST ('https://www.sqlskills.com/help/waits/' + MAX ([W1].[wait_type]) =
as XML) AS [Help/Info URL]
FROM [Waits] AS [W1]
INNER JOIN [Waits] AS [W2] ON [W2].[RowNum] &lt;=3D [W1].[RowNum]
GROUP BY [W1].[RowNum]
HAVING SUM ([W2].[Percentage]) - MAX( [W1].[Percentage] ) &lt; 95; -- perce=
ntage threshold
GO</pre>=20
</div>
</div>
</div>
</div>
<h2 id=3D"DBAServices-4.In-depthQueryTuning">4. In-depth Query Tuning</h2>
<p><a href=3D"https://learning.oreilly.com/library/view/t-sql-querying/9780=
133986631/ch02.html" data-card-appearance=3D"inline" class=3D"external-link=
" rel=3D"nofollow">https://learning.oreilly.com/library/view/t-sql-querying=
/9780133986631/ch02.html</a> </p>
    </div>
</body>
</html>
------=_Part_28_1189676038.1685049568686
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/947577c3ee36272b288b185d96eeaac9

iVBORw0KGgoAAAANSUhEUgAAAPoAAAD6CAMAAAC/MqoPAAADAFBMVEX19fXv7+98fHx1dXV9fX23
t7eenp5wcHDn5+f09PTz8/Pd3d2SkpLY2Njt7e3Q0NCioqJycnKqqqq7u7uurq6CgoKGhobOzs7D
w8PR0dGNjY3Hx8fj4+PGxsbS0tKoqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABYhwFnAAAFdklEQVR4Xu3cDVPiOhQG4EM/TAVa4IKACrvZ//+j1tndO9dBHRUU
RRd6k/SDkLbu4iytLO8zI4STNOSQmo62lAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAGAP1MzAbnirlW3GCiwt69mM7THPcT0zVsRzrd9uuweOXDPyFvfIjOyEZQZ24rf3
dsVemZE9xszA27Zs/k7lzPqHdMCpb/VL+G7O0owEw6OF1TsJF2aFlG2+CxWl7s/tp5eQlg9+Xu6Z
5nvMXLcG7DQqnDJ/s0Yxm+8zI5fA+ZQUW3ag10TKSb2SZa7T/pYU71sdvaZMjhkow/xpXV5UMoLy
GHuwrf3RFMiF1qj/e3f4Yydcv5hWNutVpP5BIPVDhNQPUWWpl3MAe0tlqVcPqR8ipH6IkPohQuqH
CKlXp16vm6GSVJK6TPY1PpNsu3M6riT7KlJ/uvfEZLejF/6KKLzfbFCOKlKneovm7dshyf/I38yJ
WpXMeiUnnkLrmaZ1u2H1bv1QpO4+bZ5RL+fEUyWpN2f1V3oh3360Zq9Ejaf65pm3clIvh/l/iTHT
LpfxrPP1C8Vsvs8yuXSdRlL0WVevkTLN91g2l7HVHnjHx96g7Zhzntd8f+XkErhNh3Wcpptz5V5O
8721ZS5bNn+nSo7rHwNS37HlVpd+euUc1stJ3doqmWVJgzIDO2GF21weXFLqOYeWXTjci8IBAAAA
AAAAAAAAoAg3A38MNwOl4kQu4/GL5L/96hvFLpe30/BzTnTygnKKc84Yc4/N+C973sBVN/3i0xVc
fxGcsZCd5Xwd+C1W78KI9OVdQfqsLx7b/Wx2ekAvpzhRreEylj2l8YueN3DxU/NPij8hrpUD5vg1
38l5y0KcKExnJ5n1pezgfigvYKstibpiCuXtYfwOYx1PbCKmI24Zlz+LT/xzHIqEj682ycndrCro
WRWaOVeNhbOZeOT/sHDdhsdb6eOgFf2chbOf1Ij2FlkRDzfeWnbTExv2ZElEZIF/GaQdxAIWkMdq
zKO6KHE2DEa2LfbWcS3on+TMuitaDLWrYFSQ6Jxlqgp6Pmfngc+MO9BwSmads4bWJt1KNkiw6EqU
cbyPuEwbrtxa4mwcjNmQaKgKXO8h+TLtlLnUeAhpSe5ySuRd0nR0taTFd5pS3j0VrJVo4T6YYTlh
RlVBz9ftf4lGV9q2EpcP/zniHQffSGuTbLXhRj3GXYwnbLEertxaaYqIe0t0qwpxMJJ+jzi0ic0o
7EzUd8tfxc8PfkGNo/kpfZW7rMkWTWztG8kaoyq/Z7oUhS/PRtciXmuSbPhdvkzbpFsV8SeO+FzT
4aqtpUeKx6IKafMNYvVlLRowtSJzFRKP7GxUr/GcHV5d+Oat1yMVjHZ4s6qg51HaYI2rx5Hc4WUh
bRPFefEOPxLvIEPmcHkylmhQetX6/PqMPonPdkYjtdOmHn7M5ft/1dajqCx/mTIXDNSv5QdsVBX0
XDAFGzJt9HG41+ppInbj4KoZXWEcD3ctHUvueGMnHfnxsTOxSmhzcxQM5OLAhuv3VGVXLRsby1x9
FB3czKr8noes53ldWSFD8Y98qvksWVfTNulW+jjkwa0eHdxYfJl1MlyuXslCMpZudplbX8Bw15Iz
Ft7cpRHBqy3u5IFwdfvIk5gqvw4n95NhtNAonC+vLN8SfWSqcnu+7M/C8MG8R4c4RK1eusm6mm2j
j2Na6788vvTlYey0HR3ckuGu+ZPFpCHGctMQg8q7Ecxfi5sBTTmXrXxIW9wkg0dPF3osPxjh0dOF
HvsTePR0occAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDwP2uQQjnRwm2d
AAAAAElFTkSuQmCC
------=_Part_28_1189676038.1685049568686
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: file:///C:/3582f1deb0810365b86e95312e68cb7c

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQBAMAAADt3eJSAAAAA3NCSVQICAjb4U/gAAAAFVBMVEX/
//9wcHBwcHBwcHBwcHBwcHBwcHA3RenHAAAAB3RSTlMAZoiZzN3/SzZomQAAAAlwSFlzAAALEgAA
CxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNui8sowAAAAUdEVYdENy
ZWF0aW9uIFRpbWUANi8xLzEzOKlF0AAAACFJREFUCJljYCATsCgwqIAZTMnMyRAhsTABCIMxkVxT
GQCLcwHyUKXpLgAAAABJRU5ErkJggg==
------=_Part_28_1189676038.1685049568686--
